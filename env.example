# YouTube Web Streamer Configuration

# =============================================================================
# URL-to-RTMP Configuration
# =============================================================================

# REQUIRED: Target web page to stream
TARGET_URL=https://example.com

# REQUIRED: YouTube Live RTMP settings
# Get these from YouTube Studio > Go Live > Stream
YOUTUBE_RTMP_URL=rtmp://a.rtmp.youtube.com/live2
YOUTUBE_STREAM_KEY=your-stream-key-here

# Security: Protect API endpoints (recommended for production)
ACCESS_KEYWORD=your-secret-keyword

# =============================================================================
# Video Quality Settings
# =============================================================================

# Stream resolution (YouTube Live recommendations)
# 1080p: 1920x1080 (recommended for high quality)
# 720p:  1280x720  (good balance of quality/performance)
STREAM_WIDTH=1920
STREAM_HEIGHT=1080

# Output framerate (YouTube Live supports up to 60fps)
STREAM_FPS=30

# Video bitrate - CRITICAL for stream quality
# YouTube Live minimums: 1080p=6000k, 720p=4000k, 480p=2500k
# Higher bitrates = better quality but more bandwidth/CPU
# The application will automatically enforce minimums
STREAM_BITRATE=8000k

# =============================================================================
# Performance Optimization - SCREENSHOT_INTERVAL
# =============================================================================

# How often to capture screenshots (in seconds or fractions)
# This is the MOST IMPORTANT performance setting!
# 
# For different content types:
# - Static dashboards (like Bitcoin prices): 30-60 seconds
# - Slowly changing content: 5-10 seconds  
# - Dynamic content: 1-2 seconds
# - Real-time content: 0.5-1 seconds
# - High-frequency updates: 0.1-0.5 seconds
#
# Examples:
# SCREENSHOT_INTERVAL=60     # 1 screenshot per minute (99.4% CPU reduction)
# SCREENSHOT_INTERVAL=30     # 1 screenshot every 30s (98.9% CPU reduction) 
# SCREENSHOT_INTERVAL=10     # 1 screenshot every 10s (96.7% CPU reduction)
# SCREENSHOT_INTERVAL=1      # 1 screenshot per second (96.7% CPU reduction)
# SCREENSHOT_INTERVAL=0.5    # 2 screenshots per second (93.3% CPU reduction)
# SCREENSHOT_INTERVAL=0.25   # 4 screenshots per second (86.7% CPU reduction)
# SCREENSHOT_INTERVAL=0.1    # 10 screenshots per second (66.7% CPU reduction)
#
# Performance impact comparison (vs original 30fps):
# Original: 108,000 screenshots/hour, 100% CPU
# 1s interval: 3,600 screenshots/hour, ~3% CPU
# 0.5s interval: 7,200 screenshots/hour, ~7% CPU
# 0.1s interval: 36,000 screenshots/hour, ~33% CPU
#
# FFmpeg automatically duplicates frames to maintain smooth 30fps output
SCREENSHOT_INTERVAL=1.0

# =============================================================================
# Server Settings
# =============================================================================

# API server port
PORT=3000

# Browser settings
HEADLESS=true

# Auto-start streaming when container launches (useful for cloud deployment)
AUTO_START=false

# =============================================================================
# Advanced Settings (usually don't need to change)
# =============================================================================

# Additional FFmpeg arguments (for advanced users)
# FFMPEG_EXTRA_ARGS=-preset ultrafast -tune zerolatency 